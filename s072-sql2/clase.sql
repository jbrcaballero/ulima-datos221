--HOLA MUNDO
SELECT  'HOLA MUNDO ' FROM DUAL;

--MUESTRA LA FECHA ACTUAL
SELECT SYSDATE FROM DUAL;

--TABLA QUE ALMACENA LA INFORMACION DE EMPLEADOS
SELECT * FROM EMPLOYEES;

--TABLA QUE ALMACENA LA INFORMACION DE DEPARTAMENTOS
SELECT * FROM DEPARTMENTS;

--INFORMACION DEL DEPARTAMENTO 90
SELECT * FROM DEPARTMENTS WHERE DEPARTMENT_ID = 90;

--ELIMINAR EL DEPARTAMENTO CON ID = 90
DELETE FROM DEPARTMENTS WHERE DEPARTMENT_ID = 90;

--PODEMOS USAR ALL_TABLES PARA REVISAR LA INFORMACION DE LAS TABLAS
SELECT * FROM ALL_TABLES
WHERE TABLE_NAME = 'EMPLOYEES';

--ALL_TAB_COLS NOS PERMITE ACCEDER A LOS CAMPOS DE CADA TABLA REGISTRADA
SELECT * FROM ALL_TAB_COLS
WHERE TABLE_NAME = 'EMPLOYEES'
AND OWNER = 'SYSTEM';

--PARA AGREGAR UNA NUEVA COLUMNA
ALTER TABLE EMPLOYEES ADD NEW_FIELD DATE;

--PARA ELIMINAR LA COLUMNA CREADA
ALTER TABLE EMPLOYEES DROP COLUMN NEW_FIELD;

--INSERTAR UN NUEVO DEPARTAMENTO
INSERT INTO DEPARTMENTS VALUES(300, 'IA', NULL, 1700);

--INSERCION ESPECIFICANDO LOS CAMPOS
INSERT INTO DEPARTMENTS(DEPARTMENT_ID, LOCATION_ID, DEPARTMENT_NAME) VALUES(400, 1700, 'Digital Transformation');

--ACTUALIZACION DE INFORMACION DE DEPARTAMENTO
UPDATE DEPARTMENTS 
SET DEPARTMENT_NAME = 'AI'
WHERE DEPARTMENT_ID = 300;

--REVISAR LA INFORMACION ACTUALIZADA
SELECT * FROM DEPARTMENTS WHERE DEPARTMENT_ID = 300;

--PODEMOS ACTUALIZAR MAS DE UN ATRIBUTO DE UNA O MAS TUPLAS
UPDATE DEPARTMENTS 
SET DEPARTMENT_NAME = 'Dig. Transformation',
    LOCATION_ID = 1800    
WHERE DEPARTMENT_ID = 400;

--ELIMINAR EL REGISTRO CREADO
DELETE FROM DEPARTMENTS WHERE DEPARTMENT_ID = 300;

--PODEMOS UTILIZAR MULTIPLES CRITERIOS DE ELIMINACION
DELETE FROM DEPARTMENTS WHERE DEPARTMENT_NAME = 'Dig. Transformation';

--ELIMINAMOS TODOS LOS REGISTROS DE LA TABLA (NO FUNCIONA SI HAY TUPLAS RELACIONADAS - FK)
DELETE FROM DEPARTMENTS;

--CONSULTAS (QUERIES)
--*******************
--MUESTRE EL NOMBRE DEL EMPLEADO, SU SALARIO Y EL NOMBRE DEL DEPARTAMENTO AL QUE PERTENECE
--OLD-STYLE
SELECT E.FIRST_NAME || ' ' || E.LAST_NAME, E.SALARY, D.DEPARTMENT_NAME 
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID;

--ANSI-SQL
SELECT E.FIRST_NAME || ' ' || E.LAST_NAME, E.SALARY, D.DEPARTMENT_NAME 
FROM EMPLOYEES E 
INNER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
INNER JOIN JOBS J
ON E.JOB_ID = J.JOB_ID;



